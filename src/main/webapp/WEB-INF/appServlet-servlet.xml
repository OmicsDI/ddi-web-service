<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:jpa="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	   http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">


    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <property name="marshaller" ref="xstreamMarshaller" />
                <property name="unmarshaller" ref="xstreamMarshaller" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller" />

    <context:component-scan base-package="uk.ac.ebi.ddi.ws.modules"/>
    <context:component-scan base-package="uk.ac.ebi.ddi.ws.services"/>


    <bean id="ebeyeWsConfigDev" class="uk.ac.ebi.ddi.ebe.ws.dao.config.EbeyeWsConfigDev" />
    <bean id="ebeyeWsConfig" class="uk.ac.ebi.ddi.ebe.ws.dao.config.EbeyeWsConfigProd" />
    <bean id="solrWsConfigDev" class="uk.ac.ebi.ddi.ebe.ws.dao.config.SolrWsConfigDev" />
    <!-- Swagger config (REST service documentation)-->
    <!-- Swagger beans -->
    <bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />
    <bean class="uk.ac.ebi.ddi.ws.swagger.SwaggerConfig"/>
    <!-- static resources mapping for Swagger UI -->
    <mvc:resources mapping="/**" location="/resources/" />
    <!-- pick up the properties needed for our Swagger configuration -->

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- property files -->
    <context:property-placeholder location="classpath:/application.properties" ignore-unresolvable="true"/>

    <!-- Callback filter for cross server query support -->
    <bean class="uk.ac.ebi.pride.web.util.callback.filter.JsonpCallbackFilter" id="jsonpCallbackFilter"/>


    <bean id="domainClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.domain.DomainWsClient">
        <constructor-arg ref="ebeyeWsConfig"/>
    </bean>

    <bean id="facetWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.facet.FacetWsClient">
        <constructor-arg ref="ebeyeWsConfig"/>
    </bean>

    <bean id="dataWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.dataset.DatasetWsClient">
        <constructor-arg ref="ebeyeWsConfig"/>
    </bean>

    <bean id="dictionaryClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.dictionary.DictionaryClient">
        <constructor-arg ref="ebeyeWsConfig"/>
    </bean>

    <bean id="publicationWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.publication.PublicationWsClient">
        <constructor-arg ref="ebeyeWsConfig"/>
    </bean>
   <!-- <bean id="domainClient" class="uk.ac.ebi.ddi.ebe.ws.dao.solrClient.domain.DomainWsClient">
        <constructor-arg ref="solrWsConfigDev"/>
    </bean>

    <bean id="facetWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.solrClient.facet.FacetWsClient">
        <constructor-arg ref="solrWsConfigDev"/>
    </bean>

    <bean id="dataWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.solrClient.dataset.DatasetWsClient">
        <constructor-arg ref="solrWsConfigDev"/>
    </bean>

    <bean id="dictionaryClient" class="uk.ac.ebi.ddi.ebe.ws.dao.solrClient.dictionary.DictionaryClient">
        <constructor-arg ref="solrWsConfigDev"/>
    </bean>

    <bean id="publicationWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.publication.PublicationWsClient">
        <constructor-arg ref="solrWsConfigDev"/>
    </bean>-->
    <!--<bean id="domainClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.domain.DomainWsClient">
        <constructor-arg ref="ebeyeWsConfigDev"/>
    </bean>

    <bean id="facetWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.facet.FacetWsClient">
        <constructor-arg ref="ebeyeWsConfigDev"/>
    </bean>

    <bean id="dataWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.dataset.DatasetWsClient">
        <constructor-arg ref="ebeyeWsConfigDev"/>
    </bean>

    <bean id="dictionaryClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.dictionary.DictionaryClient">
        <constructor-arg ref="ebeyeWsConfigDev"/>
    </bean>

    <bean id="publicationWsClient" class="uk.ac.ebi.ddi.ebe.ws.dao.client.publication.PublicationWsClient">
        <constructor-arg ref="ebeyeWsConfigDev"/>
    </bean>-->
    <!-- Maven information an autowired classes -->

    <mongo:repositories base-package="uk.ac.ebi.ddi.service.db.repo" />
    <context:component-scan base-package="uk.ac.ebi.ddi.service.db.service"/>

    <mongo:mongo-client credentials="${ddi.mongo.app.user}:${ddi.mongo.app.password}@${ddi.mongo.app.authenticationDatabase}" id="mongoClient" replica-set="${ddi.mongo.app.machine.one}:${ddi.mongo.app.port},${ddi.mongo.app.machine.two}:${ddi.mongo.app.port},${ddi.mongo.app.machine.three}:${ddi.mongo.app.port}">
        <mongo:client-options connections-per-host="5"
                              threads-allowed-to-block-for-connection-multiplier="10"
                              connect-timeout="100000"
                              max-wait-time="30000"
                              socket-keep-alive="true"
                              socket-timeout="1000000"
                              write-concern="NORMAL"
                              read-preference="PRIMARY_PREFERRED"/>
    </mongo:mongo-client>

    <mongo:db-factory dbname="${ddi.mongo.app.db}" mongo-ref="mongoClient"/>
    <!--<mongo:db-factory dbname="ddi_db"  mongo-ref="mongoClient"/>-->

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

    <!--<bean class="uk.ac.ebi.ddi.service.db.utils.CascadingMongoEventListener" />-->
    <bean id="eventService" class="uk.ac.ebi.ddi.service.db.service.logger.HttpEventService" />
    <bean id="resourceService" class="uk.ac.ebi.ddi.service.db.service.logger.DatasetResourceService" />
<!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000"/>
        <property name="uploadTempDir" value="resources/validate"/>
    </bean>-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="268435456"/>
        <!--<property name="uploadTempDir" value="resources/validate"/>-->
    </bean>


</beans>
